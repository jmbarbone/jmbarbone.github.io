---
title: Score equating
subtitle: With the `{equate}` package
date: "2022-08-27"
categories: ["R", "statistics"]
draft: true
---

Something about equating.
The `{gt}` package provides some great options for formatting clean tables.

```{r}
library(equate)
library(gt)
```

The data we'll be using is from the `{psych}` package.

```{r data}
data(sat.act, package = "psych")
str(data)
```

```{r published-tables}
# math
ref_act_satq = data.frame(
  ACT = c(36L,35L,34L,33L,32L,31L,30L,29L,28L,
          27L,26L,25L,24L,23L,22L,21L,20L,19L,18L,17L,16L,
          15L,14L,13L,12L,11L,10L),
  SATQ = c(800L,780L,760L,740L,720L,710L,700L,
           680L,660L,640L,610L,590L,580L,560L,540L,530L,520L,510L,
           500L,470L,430L,400L,360L,330L,310L,280L,260L)
)

# reading
data.frame(
  ACT = c(72L,71L,70L,69L,68L,67L,66L,65L,64L,
          63L,62L,61L,60L,59L,58L,57L,56L,55L,54L,53L,52L,
          51L,50L,49L,48L,47L,46L,45L,44L,43L,42L,41L,40L,39L,
          38L,37L,36L,35L,34L,33L,32L,31L,30L,29L,28L,27L,
          26L,25L,24L,23L,22L,21L,20L,19L,18L,17L,16L,15L,14L),
  SATV = c(790L,770L,750L,740L,730L,720L,710L,
           700L,700L,690L,680L,680L,670L,660L,660L,650L,640L,640L,
           630L,630L,620L,610L,610L,600L,590L,580L,580L,570L,
           560L,550L,540L,540L,530L,520L,510L,500L,500L,490L,480L,
           470L,460L,450L,440L,430L,420L,410L,400L,390L,380L,
           370L,360L,350L,340L,330L,320L,310L,300L,290L,280L)
)

data.frame(
  stringsAsFactors = FALSE,
  check.names = FALSE,
  ACT = c(36L,35L,34L,33L,32L,31L,
          30L,29L,28L,27L,26L,25L,24L,23L,22L,21L,20L,19L,
          18L,17L,16L,15L,14L,13L,12L,11L,10L,9L),
  SATQ = c(1590L,1540L,1500L,1460L,
          1430L,1400L,1370L,1340L,1310L,1280L,1240L,1210L,
          1180L,1140L,1110L,1080L,1040L,1010L,970L,930L,890L,
          850L,800L,760L,710L,670L,630L,590L),
  `SAT Range` = c("1570-1600","1530-1560",
                  "1490-1520","1450-1480","1420-1440","1390-1410",
                  "1360-1380","1330-1350","1300-1320","1260-1290","1230-1250",
                  "1200-1220","1160-1190","1130-1150","1100-1120",
                  "1060-1090","1030-1050","990-1020","960-980","920-950",
                  "880-910","830-870","780-820","730-770","690-720",
                  "650-680","620–640","590–610")
)
```


<!-- TODO add information on published concordance tables. -->
<!-- https://www.act.org/content/dam/act/unsecured/documents/ACT-SAT-Concordance-Tables.pdf -->
<!-- Our results won't be exact but maybe close enough. -->

## Equivalent group design

The anchors we're using are the range of the scores in the current data set.

```{r eg-design}
act_ft  <- freqtab(sat.act$ACT, 3:36)
satv_ft <- freqtab(sat.act$SATV, 200:800)
satq_ft <- freqtab(sat.act$SATQ, 200:800)
sat_ft  <- freqtab(sat.act$SATV + sat.act$SATQ, 400:1600)

eq_act_satv <- equate(act_ft, satv_ft, type = "equipercentile")
eq_act_satq <- equate(act_ft, satq_ft, type = "equipercentile")
eq_act_sat  <- equate(act_ft, sat_ft,  type = "equipercentile")
```

```{r eg-plot}
#| layout: [[1,1,1,1],[1]]
#| fig-align: center
#| column: screen-inset-shaded
plot(act_ft) 
plot(satq_ft)
plot(sat_ft)
plot(satv_ft)

plot(
  eq_act_satv,
  eq_act_satq,
  eq_act_sat,
  legendtext = c("SAT-V", "SAT-Q", "SAT"),
  xlab = "ACT",
  addident = FALSE
)
```

Generate a concordance table.
This table will allow us to match scores on the ACT to scores on the SAT.

```{r eg-table}
#| column: screen-inset-shaded
tab <- cbind(
  eq_act_satv$concordance,
  eq_act_satq$concordance[-1],
  eq_act_sat$concordance[-1]
)

tab |> 
  mark::flip() |> 
  setNames(c("act", "satv", "satv_se", "satq", "satq_se", "sat", "sat_se")) |> 
  gt(NULL, "ACT") |>
  fmt_integer(c(act, satv, satq, sat)) |> 
  fmt_number(ends_with("_se"), decimals = 2) |> 
  cols_merge(c(satv, satv_se), pattern = "{1} ({2})") |> 
  cols_merge(c(satq, satq_se), pattern = "{1} ({2})") |> 
  cols_merge(c(sat,  sat_se),  pattern = "{1} ({2})") |> 
  cols_label(act = "ACT", satv = "SAT-V", satq = "SAT-Q", sat = "SAT") |> 
  tab_options()
```

## Single group design

```{r sg-design}
act_satv_ft <- freqtab(sat.act[, c("ACT", "SATV")], list(3:36, 200:800))
act_satq_ft <- freqtab(sat.act[, c("ACT", "SATQ")], list(3:36, 200:800))
act_sat_ft  <- with(sat.act, freqtab(list(ACT, SATV + SATQ), list(3:36, 400:1600)))

eq_act_satv_sg <- equate(act_satv_ft, type = "equipercentile")
eq_act_satq_sg <- equate(act_satq_ft, type = "equipercentile")
eq_act_sat_sg  <- equate(act_sat_ft,  type = "equipercentile")
```


```{r sg-plot}
#| layout: [[1,1,1],[1]]
#| fig-align: center
#| column: screen-inset-shaded
plot(act_satv_ft)
plot(act_satq_ft)
plot(act_sat_ft)

plot(
  eq_act_satv_sg, 
  eq_act_satq_sg, 
  eq_act_sat_sg,
  legendtext = c("SAT-V", "SAT-Q", "SAT"),
  xlab = "ACT",
  addident = FALSE
)
```

We can construct the same concordance table as we did before.
However, because we are using a single group design, we won't be reporting any standard error values.

```{r sg-table}
#| column: screen-inset-shaded
tab <- cbind(
  eq_act_satv_sg$concordance,
  eq_act_satq_sg$concordance[-1],
  eq_act_sat_sg$concordance[-1]
)

tab |> 
  setNames(c("act", "satv", "satq", "sat")) |>
  mark::flip() |> 
  gt(NULL, "ACT") |>
  fmt_integer(c(act, satv, satq, sat)) |> 
  fmt_number(ends_with("_se"), decimals = 2) |> 
  cols_label(act = "ACT", satv = "SAT-V", satq = "SAT-Q", sat = "SAT") |> 
  tab_options()
```

